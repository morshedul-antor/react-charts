{"ast":null,"code":"var _jsxFileName = \"/home/antor/Desktop/projects/react-chat/src/Charts/DoughnutChart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst DoughnutChart = () => {\n  // const [chart, setChart] = useState({})\n  // var baseUrl = \"https://api.coinranking.com/v2/coins/?limit=10\";\n  // var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  // var apiKey = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";\n  // useEffect(() => {\n  //   const fetchCoins = async () => {\n  //     await fetch(`${proxyUrl}${baseUrl}`, {\n  //       method: 'GET',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         'x-access-token': `${apiKey}`,\n  //         'Access-Control-Allow-Origin': \"*\"\n  //       }\n  //     })\n  //       .then((response) => {\n  //         if (response.ok) {\n  //           response.json().then((json) => {\n  //             console.log(json.data);\n  //             setChart(json.data)\n  //           });\n  //         }\n  //       }).catch((error) => {\n  //         console.log(error);\n  //       });\n  //   };\n  //   fetchCoins()\n  // }, [baseUrl, proxyUrl, apiKey])\n  var data = {\n    labels: [\"Red\", \"Green\", \"Orange\"],\n    datasets: [{\n      data: [5, 9, 30] // backgroundColor: [\n      //     \"rgba(255, 99, 132, 0.2)\",\n      //     \"rgba(54, 162, 235, 0.2)\",\n      //     \"rgba(255, 206, 86, 0.2)\",\n      //     \"rgba(75, 192, 192, 0.2)\",\n      //     \"rgba(153, 102, 255, 0.2)\",\n      //     \"rgba(255, 159, 64, 0.2)\",\n      // ],\n      // borderColor: [\n      //     \"rgba(255, 99, 132, 1)\",\n      //     \"rgba(54, 162, 235, 1)\",\n      //     \"rgba(255, 206, 86, 1)\",\n      //     \"rgba(75, 192, 192, 1)\",\n      //     \"rgba(153, 102, 255, 1)\",\n      //     \"rgba(255, 159, 64, 1)\",\n      // ],\n      // borderWidth: 1,\n\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DoughnutChart;\nexport default DoughnutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"sources":["/home/antor/Desktop/projects/react-chat/src/Charts/DoughnutChart.js"],"names":["React","useState","useEffect","Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","register","DoughnutChart","data","labels","datasets"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAK,IAAIC,OAAlB,EAA2BC,UAA3B,EAAuCC,OAAvC,EAAgDC,MAAhD,QAA8D,UAA9D;AAEA,SAASC,QAAT,QAAyB,iBAAzB;;AAEAJ,OAAO,CAACK,QAAR,CAAiBJ,UAAjB,EAA6BC,OAA7B,EAAsCC,MAAtC;;AAEA,MAAMG,aAAa,GAAG,MAAM;AACxB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAIC,IAAI,GAAG;AACPC,IAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,CADD;AAEPC,IAAAA,QAAQ,EAAE,CACN;AACIF,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CADV,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlBJ,KADM;AAFH,GAAX;AA0BA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA9DD;;KAAMD,a;AAgEN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst DoughnutChart = () => {\r\n    // const [chart, setChart] = useState({})\r\n    // var baseUrl = \"https://api.coinranking.com/v2/coins/?limit=10\";\r\n    // var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\n    // var apiKey = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";\r\n\r\n    // useEffect(() => {\r\n    //   const fetchCoins = async () => {\r\n    //     await fetch(`${proxyUrl}${baseUrl}`, {\r\n    //       method: 'GET',\r\n    //       headers: {\r\n    //         'Content-Type': 'application/json',\r\n    //         'x-access-token': `${apiKey}`,\r\n    //         'Access-Control-Allow-Origin': \"*\"\r\n    //       }\r\n    //     })\r\n    //       .then((response) => {\r\n    //         if (response.ok) {\r\n    //           response.json().then((json) => {\r\n    //             console.log(json.data);\r\n    //             setChart(json.data)\r\n    //           });\r\n    //         }\r\n    //       }).catch((error) => {\r\n    //         console.log(error);\r\n    //       });\r\n    //   };\r\n    //   fetchCoins()\r\n    // }, [baseUrl, proxyUrl, apiKey])\r\n\r\n    var data = {\r\n        labels: [\"Red\", \"Green\", \"Orange\"],\r\n        datasets: [\r\n            {\r\n                data: [5, 9, 30],\r\n                // backgroundColor: [\r\n                //     \"rgba(255, 99, 132, 0.2)\",\r\n                //     \"rgba(54, 162, 235, 0.2)\",\r\n                //     \"rgba(255, 206, 86, 0.2)\",\r\n                //     \"rgba(75, 192, 192, 0.2)\",\r\n                //     \"rgba(153, 102, 255, 0.2)\",\r\n                //     \"rgba(255, 159, 64, 0.2)\",\r\n                // ],\r\n                // borderColor: [\r\n                //     \"rgba(255, 99, 132, 1)\",\r\n                //     \"rgba(54, 162, 235, 1)\",\r\n                //     \"rgba(255, 206, 86, 1)\",\r\n                //     \"rgba(75, 192, 192, 1)\",\r\n                //     \"rgba(153, 102, 255, 1)\",\r\n                //     \"rgba(255, 159, 64, 1)\",\r\n                // ],\r\n                // borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>New</h1>\r\n            <Doughnut data={data} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoughnutChart;\r\n"]},"metadata":{},"sourceType":"module"}