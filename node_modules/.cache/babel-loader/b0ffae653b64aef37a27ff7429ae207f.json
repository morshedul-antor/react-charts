{"ast":null,"code":"var _jsxFileName = \"/home/antor/Desktop/projects/react-chat/src/Charts/PieChart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst PieChart = () => {\n  var _chart, _chart$coins, _chart2, _chart2$coins, _chart3, _chart3$coins;\n\n  // const [chart, setChart] = useState({});\n  var data = {\n    labels: (_chart = chart) === null || _chart === void 0 ? void 0 : (_chart$coins = _chart.coins) === null || _chart$coins === void 0 ? void 0 : _chart$coins.map(x => x.name),\n    datasets: [{\n      label: `${(_chart2 = chart) === null || _chart2 === void 0 ? void 0 : (_chart2$coins = _chart2.coins) === null || _chart2$coins === void 0 ? void 0 : _chart2$coins.length} Coins Available`,\n      data: (_chart3 = chart) === null || _chart3 === void 0 ? void 0 : (_chart3$coins = _chart3.coins) === null || _chart3$coins === void 0 ? void 0 : _chart3$coins.map(x => x.price),\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n      borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n      borderWidth: 1\n    }]\n  };\n  var options = {\n    maintainAspectRatio: false,\n    scales: {},\n    legend: {\n      labels: {\n        fontSize: 25\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: data,\n      height: 400,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PieChart;\nexport default PieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"sources":["/home/antor/Desktop/projects/react-chat/src/Charts/PieChart.js"],"names":["React","useState","useEffect","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","register","PieChart","data","labels","chart","coins","map","x","name","datasets","label","length","price","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","scales","legend","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAK,IAAIC,OAAlB,EAA2BC,UAA3B,EAAuCC,OAAvC,EAAgDC,MAAhD,QAA8D,UAA9D;AAEA,SAASC,GAAT,QAAoB,iBAApB;;AAEAJ,OAAO,CAACK,QAAR,CAAiBJ,UAAjB,EAA6BC,OAA7B,EAAsCC,MAAtC;;AAEA,MAAMG,QAAQ,GAAG,MAAM;AAAA;;AACnB;AAEA,MAAIC,IAAI,GAAG;AACPC,IAAAA,MAAM,YAAEC,KAAF,2DAAE,OAAOC,KAAT,iDAAE,aAAcC,GAAd,CAAmBC,CAAD,IAAOA,CAAC,CAACC,IAA3B,CADD;AAEPC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAG,GAAD,WAAGN,KAAH,6DAAG,QAAOC,KAAV,kDAAG,cAAcM,MAAO,kBADnC;AAEIT,MAAAA,IAAI,aAAEE,KAAF,6DAAE,QAAOC,KAAT,kDAAE,cAAcC,GAAd,CAAmBC,CAAD,IAAOA,CAAC,CAACK,KAA3B,CAFV;AAGIC,MAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHrB;AAWIC,MAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXjB;AAmBIC,MAAAA,WAAW,EAAE;AAnBjB,KADM;AAFH,GAAX;AA2BA,MAAIC,OAAO,GAAG;AACVC,IAAAA,mBAAmB,EAAE,KADX;AAEVC,IAAAA,MAAM,EAAE,EAFE;AAGVC,IAAAA,MAAM,EAAE;AACJhB,MAAAA,MAAM,EAAE;AACJiB,QAAAA,QAAQ,EAAE;AADN;AADJ;AAHE,GAAd;AAUA,sBACI;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,IAAI,EAAElB,IAAX;AAAiB,MAAA,MAAM,EAAE,GAAzB;AAA8B,MAAA,OAAO,EAAEc;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA7CD;;KAAMf,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst PieChart = () => {\r\n    // const [chart, setChart] = useState({});\r\n\r\n    var data = {\r\n        labels: chart?.coins?.map((x) => x.name),\r\n        datasets: [\r\n            {\r\n                label: `${chart?.coins?.length} Coins Available`,\r\n                data: chart?.coins?.map((x) => x.price),\r\n                backgroundColor: [\r\n                    \"rgba(255, 99, 132, 0.2)\",\r\n                    \"rgba(54, 162, 235, 0.2)\",\r\n                    \"rgba(255, 206, 86, 0.2)\",\r\n                    \"rgba(75, 192, 192, 0.2)\",\r\n                    \"rgba(153, 102, 255, 0.2)\",\r\n                    \"rgba(255, 159, 64, 0.2)\",\r\n                ],\r\n                borderColor: [\r\n                    \"rgba(255, 99, 132, 1)\",\r\n                    \"rgba(54, 162, 235, 1)\",\r\n                    \"rgba(255, 206, 86, 1)\",\r\n                    \"rgba(75, 192, 192, 1)\",\r\n                    \"rgba(153, 102, 255, 1)\",\r\n                    \"rgba(255, 159, 64, 1)\",\r\n                ],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    var options = {\r\n        maintainAspectRatio: false,\r\n        scales: {},\r\n        legend: {\r\n            labels: {\r\n                fontSize: 25,\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Pie data={data} height={400} options={options} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PieChart;\r\n"]},"metadata":{},"sourceType":"module"}