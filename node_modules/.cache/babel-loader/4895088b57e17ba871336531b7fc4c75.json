{"ast":null,"code":"var _jsxFileName = \"/home/antor/Desktop/projects/react-chat/src/Charts/DoughnutChart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst DoughnutChart = () => {\n  var _chart, _chart$coins, _chart2, _chart2$coins, _chart3, _chart3$coins;\n\n  // const [chart, setChart] = useState({})\n  // var baseUrl = \"https://api.coinranking.com/v2/coins/?limit=10\";\n  // var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  // var apiKey = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";\n  // useEffect(() => {\n  //   const fetchCoins = async () => {\n  //     await fetch(`${proxyUrl}${baseUrl}`, {\n  //       method: 'GET',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         'x-access-token': `${apiKey}`,\n  //         'Access-Control-Allow-Origin': \"*\"\n  //       }\n  //     })\n  //       .then((response) => {\n  //         if (response.ok) {\n  //           response.json().then((json) => {\n  //             console.log(json.data);\n  //             setChart(json.data)\n  //           });\n  //         }\n  //       }).catch((error) => {\n  //         console.log(error);\n  //       });\n  //   };\n  //   fetchCoins()\n  // }, [baseUrl, proxyUrl, apiKey])\n  console.log(\"chart\", chart);\n  var data = {\n    labels: (_chart = chart) === null || _chart === void 0 ? void 0 : (_chart$coins = _chart.coins) === null || _chart$coins === void 0 ? void 0 : _chart$coins.map(x => x.name),\n    datasets: [{\n      label: `${(_chart2 = chart) === null || _chart2 === void 0 ? void 0 : (_chart2$coins = _chart2.coins) === null || _chart2$coins === void 0 ? void 0 : _chart2$coins.length} Coins Available`,\n      data: (_chart3 = chart) === null || _chart3 === void 0 ? void 0 : (_chart3$coins = _chart3.coins) === null || _chart3$coins === void 0 ? void 0 : _chart3$coins.map(x => x.price),\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n      borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n      borderWidth: 1\n    }]\n  };\n  var options = {\n    maintainAspectRatio: false,\n    scales: {},\n    legend: {\n      labels: {\n        fontSize: 25\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data,\n      height: 400,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DoughnutChart;\nexport default DoughnutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"sources":["/home/antor/Desktop/projects/react-chat/src/Charts/DoughnutChart.js"],"names":["React","useState","useEffect","Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","register","DoughnutChart","console","log","chart","data","labels","coins","map","x","name","datasets","label","length","price","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","scales","legend","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAK,IAAIC,OAAlB,EAA2BC,UAA3B,EAAuCC,OAAvC,EAAgDC,MAAhD,QAA8D,UAA9D;AAEA,SAASC,QAAT,QAAyB,iBAAzB;;AAEAJ,OAAO,CAACK,QAAR,CAAiBJ,UAAjB,EAA6BC,OAA7B,EAAsCC,MAAtC;;AAEA,MAAMG,aAAa,GAAG,MAAM;AAAA;;AACxB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AACA,MAAIC,IAAI,GAAG;AACPC,IAAAA,MAAM,YAAEF,KAAF,2DAAE,OAAOG,KAAT,iDAAE,aAAcC,GAAd,CAAmBC,CAAD,IAAOA,CAAC,CAACC,IAA3B,CADD;AAEPC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAG,GAAD,WAAGR,KAAH,6DAAG,QAAOG,KAAV,kDAAG,cAAcM,MAAO,kBADnC;AAEIR,MAAAA,IAAI,aAAED,KAAF,6DAAE,QAAOG,KAAT,kDAAE,cAAcC,GAAd,CAAmBC,CAAD,IAAOA,CAAC,CAACK,KAA3B,CAFV;AAGIC,MAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHrB;AAWIC,MAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXjB;AAmBIC,MAAAA,WAAW,EAAE;AAnBjB,KADM;AAFH,GAAX;AA2BA,MAAIC,OAAO,GAAG;AACVC,IAAAA,mBAAmB,EAAE,KADX;AAEVC,IAAAA,MAAM,EAAE,EAFE;AAGVC,IAAAA,MAAM,EAAE;AACJf,MAAAA,MAAM,EAAE;AACJgB,QAAAA,QAAQ,EAAE;AADN;AADJ;AAHE,GAAd;AAUA,sBACI;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEjB,IAAhB;AAAsB,MAAA,MAAM,EAAE,GAA9B;AAAmC,MAAA,OAAO,EAAEa;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAzED;;KAAMjB,a;AA2EN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst DoughnutChart = () => {\r\n    // const [chart, setChart] = useState({})\r\n    // var baseUrl = \"https://api.coinranking.com/v2/coins/?limit=10\";\r\n    // var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\n    // var apiKey = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";\r\n\r\n    // useEffect(() => {\r\n    //   const fetchCoins = async () => {\r\n    //     await fetch(`${proxyUrl}${baseUrl}`, {\r\n    //       method: 'GET',\r\n    //       headers: {\r\n    //         'Content-Type': 'application/json',\r\n    //         'x-access-token': `${apiKey}`,\r\n    //         'Access-Control-Allow-Origin': \"*\"\r\n    //       }\r\n    //     })\r\n    //       .then((response) => {\r\n    //         if (response.ok) {\r\n    //           response.json().then((json) => {\r\n    //             console.log(json.data);\r\n    //             setChart(json.data)\r\n    //           });\r\n    //         }\r\n    //       }).catch((error) => {\r\n    //         console.log(error);\r\n    //       });\r\n    //   };\r\n    //   fetchCoins()\r\n    // }, [baseUrl, proxyUrl, apiKey])\r\n\r\n    console.log(\"chart\", chart);\r\n    var data = {\r\n        labels: chart?.coins?.map((x) => x.name),\r\n        datasets: [\r\n            {\r\n                label: `${chart?.coins?.length} Coins Available`,\r\n                data: chart?.coins?.map((x) => x.price),\r\n                backgroundColor: [\r\n                    \"rgba(255, 99, 132, 0.2)\",\r\n                    \"rgba(54, 162, 235, 0.2)\",\r\n                    \"rgba(255, 206, 86, 0.2)\",\r\n                    \"rgba(75, 192, 192, 0.2)\",\r\n                    \"rgba(153, 102, 255, 0.2)\",\r\n                    \"rgba(255, 159, 64, 0.2)\",\r\n                ],\r\n                borderColor: [\r\n                    \"rgba(255, 99, 132, 1)\",\r\n                    \"rgba(54, 162, 235, 1)\",\r\n                    \"rgba(255, 206, 86, 1)\",\r\n                    \"rgba(75, 192, 192, 1)\",\r\n                    \"rgba(153, 102, 255, 1)\",\r\n                    \"rgba(255, 159, 64, 1)\",\r\n                ],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    var options = {\r\n        maintainAspectRatio: false,\r\n        scales: {},\r\n        legend: {\r\n            labels: {\r\n                fontSize: 25,\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Doughnut data={data} height={400} options={options} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoughnutChart;\r\n"]},"metadata":{},"sourceType":"module"}